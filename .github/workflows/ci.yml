name: CI/CD for Task Files

on:
  push:
    paths:
      - '**/devops_*.php'
  pull_request:
    paths:
      - '**/devops_*.php'

jobs:
  build:
    runs-on: ubuntu-latest  # نستخدم Ubuntu بدلاً من Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install

      - name: List files in workspace
        run: ls -R

      - name: Ensure tests directory exists
        run: |
          if [ ! -d "tests" ]; then
            echo "Tests directory not found! Creating directory."
            mkdir tests
          else
            echo "Tests directory exists."
          fi

      - name: Identify changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: '**/devops_*.php'

      - name: Run tests on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          changedFiles="${{ steps.changed-files.outputs.all_changed_files }}"
          IFS=$'\n'
          for file in $changedFiles; do
            echo "Testing $file"
            php -l $file
            if grep -q '<?php' "$file" && grep -q '?>' "$file"; then
              echo "PHP opening and closing tags found in $file"
            else
              echo "PHP opening or closing tag not found in $file"
              exit 1
            fi
            if grep -q 'function' "$file"; then
              echo "PHP functions found in $file"
            else
              echo "No PHP functions found in $file, but continuing..."
            fi
          done

      - name: Build and push Docker image
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t $DOCKER_USERNAME/devops_app:latest .
          docker push $DOCKER_USERNAME/devops_app:latest
