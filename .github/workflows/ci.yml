name: CI/CD for Task Files

on:
  push:
    paths:
      - '**/devops_*.php'
  pull_request:
    paths:
      - '**/devops_*.php'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install

      - name: List files in workspace
        run: Get-ChildItem -Recurse
        shell: pwsh

      - name: Ensure tests directory exists
        run: |
          if (Test-Path "tests") {
            Write-Host "Tests directory exists."
          } else {
            Write-Host "Tests directory not found!"
            exit 1
          }
        shell: pwsh

      - name: Identify changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: '**/devops_*.php'

      - name: Run tests on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          $changedFiles = '${{ steps.changed-files.outputs.all_changed_files }}'.Split("`n")
          foreach ($file in $changedFiles) {
            Write-Host "Testing $file"
            php -l $file
            if (Select-String -Path $file -Pattern '<?php' -Quiet) {
              Write-Host "PHP opening tag found in $file"
            } else {
              Write-Host "PHP opening tag not found in $file"
              exit 1
            }

            if (Select-String -Path $file -Pattern 'function' -Quiet) {
              Write-Host "PHP functions found in $file"
            } else {
              Write-Host "No PHP functions found in $file, but continuing..."
            }
          }
        shell: pwsh

      - name: Build Project
        run: |
          Write-Host "Building the project..."
          # Add any build commands you need for your project here
        shell: pwsh

      - name: Copy test results to deploy directory
        run: |
          New-Item -ItemType Directory -Path results_deploy -Force
          if (Test-Path "tests") {
            Copy-Item -Path tests/* -Destination results_deploy/ -Recurse
          } else {
            Write-Host "Tests directory not found!"
            exit 1
          }
        shell: pwsh

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: results_deploy/

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: ./results

      - name: Setup SSH
        run: |
          mkdir -Force -Path $env:USERPROFILE\.ssh
          Set-Content -Path $env:USERPROFILE\.ssh\id_rsa -Value "${{ secrets.SSH_PRIVATE_KEY }}" -NoNewline
          icacls $env:USERPROFILE\.ssh\id_rsa /inheritance:r
          icacls $env:USERPROFILE\.ssh\id_rsa /grant:r $($env:USERNAME):(R)
          ssh-keyscan -H ${{ env.SCP_HOST }} | Out-File -Append -FilePath $env:USERPROFILE\.ssh\known_hosts
        shell: pwsh
        env:
          SCP_HOST: "127.0.0.1"

      - name: Deploy to local server using SCP
        run: |
          Write-Host "Starting deployment to local server..."
          scp -P 22 -i $env:USERPROFILE\.ssh\id_rsa -o StrictHostKeyChecking=no ./results/* $env:SCP_USER@$env:SCP_HOST:$env:SCP_PATH
          Write-Host "Deployment to local server completed."
        shell: pwsh
        env:
          SCP_USER: "acer"
          SCP_HOST: "127.0.0.1"
          SCP_PATH: "/mnt/d/xampp/htdocs/aqdevops/results_deploy/"
