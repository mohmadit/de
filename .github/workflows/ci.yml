name: CI/CD for Task Files

on:
  push:
    paths:
      - '**/devops_*.php'
  pull_request:
    paths:
      - '**/devops_*.php'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install

      - name: List files in workspace
        run: Get-ChildItem -Recurse

      - name: Ensure tests directory exists
        run: |
          if (Test-Path -Path "tests") {
            Write-Output "Tests directory exists."
          } else {
            Write-Output "Tests directory not found!"
            exit 1
          }

      - name: Identify changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: '**/devops_*.php'

      - name: Run tests on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          $changedFiles = "${{ steps.changed-files.outputs.all_changed_files }}".Split("`n")
          foreach ($file in $changedFiles) {
            Write-Output "Testing $file"
            php -l $file
            if ((Get-Content $file) -match '<\?php' -and (Get-Content $file) -match '\?>') {
              Write-Output "PHP opening and closing tags found in $file"
            } else {
              Write-Output "PHP opening or closing tag not found in $file"
              exit 1
            }

            if ((Get-Content $file) -match 'function') {
              Write-Output "PHP functions found in $file"
            } else {
              Write-Output "No PHP functions found in $file, but continuing..."
            }
          }

      - name: Build Project
        run: Write-Output "Building the project..."

      - name: Copy test results to deploy directory
        run: |
          if (-Not (Test-Path -Path "results_deploy")) {
            New-Item -ItemType Directory -Path "results_deploy"
          }
          if (Test-Path -Path "tests") {
            Copy-Item -Path "tests/*" -Destination "results_deploy/"
          } else {
            Write-Output "Tests directory not found!"
            exit 1
          }

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: results_deploy/

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: test-results
          path: ./results

      - name: Setup SSH
        run: |
          mkdir -Force -Path $env:USERPROFILE\.ssh
          Set-Content -Path $env:USERPROFILE\.ssh\id_rsa -Value "${{ secrets.SSH_PRIVATE_KEY }}" -NoNewline
          icacls $env:USERPROFILE\.ssh\id_rsa /inheritance:r
          icacls $env:USERPROFILE\.ssh\id_rsa /grant:r "$($env:USERNAME):F"
          ssh-keyscan -H github.com | Out-File -Append -FilePath $env:USERPROFILE\.ssh\known_hosts
        env:
          SCP_HOST: "127.0.0.1"

      - name: Deploy to local server using SCP
        run: |
          echo "Starting deployment to local server..."
          $scpCommand = "scp -o StrictHostKeyChecking=no -i $env:USERPROFILE\.ssh\id_rsa ./results/* $env:SCP_USER@$env:SCP_HOST:`"$env:SCP_PATH`""
          Invoke-Expression $scpCommand
          echo "Deployment to local server completed."
        shell: pwsh
        env:
          SCP_USER: acer
          SCP_HOST: 127.0.0.1
          SCP_PATH: D:\xampp\htdocs\aqdevops\results_deploy\
