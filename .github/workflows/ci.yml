name: CI

on:
  workflow_dispatch:
    inputs:
      file_path:
        description: 'Path to the file to process'
        required: true
  push:
    paths:
      - '**/devops_*.php'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install

      - name: Install PHPUnit
        run: composer require --dev phpunit/phpunit

      - name: Get file path from input
        if: github.event_name == 'workflow_dispatch'
        id: get_file_path
        run: echo "FILE_PATH=${{ github.event.inputs.file_path }}" >> $GITHUB_ENV

      - name: Find latest devops file
        if: github.event_name == 'push'
        id: find_latest_file
        run: |
          latest_file=$(find . -name 'devops_*.php' -print0 | xargs -0 ls -t | head -n 1)
          echo "FILE_PATH=$latest_file" >> $GITHUB_ENV

      - name: Display file for debugging
        run: echo "File path:${{ env.FILE_PATH }}"

      - name: Validate PHP file structure
        run: |
          if [ ! -f "$FILE_PATH" ]; then
            echo "File $FILE_PATH does not exist."
            exit 1
          fi
          if ! grep -q "<?php" "$FILE_PATH"; then
            echo "File $FILE_PATH does not contain PHP opening tag."
            exit 1
          fi
          if ! grep -q "?>" "$FILE_PATH"; then
            echo "File $FILE_PATH does not contain PHP closing tag."
            exit 1
          fi
          echo "File $FILE_PATH contains valid PHP tags."

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: "Release ${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Stop the workflow after release creation
        run: exit 0

      - name: Upload Release Asset
        if: always() # This will ensure the step runs regardless of previous success/failure
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: $(basename ${{ env.FILE_PATH }})
          asset_content_type: application/php

