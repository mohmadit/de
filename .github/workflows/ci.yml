name: CI/CD for Task Files

on:
  push:
    paths:
      - '**/devops_*.php'
  pull_request:
    paths:
      - '**/devops_*.php'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: composer install

      - name: List files in workspace
        run: ls -R

      - name: Ensure tests directory exists
        run: |
          if [ -d "tests" ]; then
            echo "Tests directory exists."
          else
            echo "Tests directory not found!"
            exit 1
          fi

      - name: Identify changed files
        id: changed-files
        uses: tj-actions/changed-files@v34
        with:
          files: '**/devops_*.php'

      - name: Run tests on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "Testing $file"
            php -l $file
            if grep -q "<?php" $file && grep -q "?>" $file; then
              echo "PHP opening and closing tags found in $file"
            else
              echo "PHP opening or closing tag not found in $file"
              exit 1
            fi

            if grep -q "function" $file; then
              echo "PHP functions found in $file"
            else
              echo "No PHP functions found in $file, but continuing..."
            fi
          done

      - name: Build Project
        run: echo "Building the project..."

      - name: Copy test results to deploy directory
        run: |
          mkdir -p results_deploy
          if [ -d "tests" ]; then
            cp -r tests/* results_deploy/
          else
            echo "Tests directory not found!"
            exit 1
          fi

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        run: netlify deploy --prod --dir=results_deploy --auth=$NETLIFY_AUTH_TOKEN --site=$NETLIFY_SITE_ID
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
